# Generated by Django 2.1.1 on 2018-10-01 08:35

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(0, 'Provider'), (1, 'Visitor'), (2, 'Both')], default=1, verbose_name='user type')),
                ('provider_since', models.DateTimeField(null=True, verbose_name='provider since')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('about', models.CharField(blank=True, max_length=16383, verbose_name='about')),
                ('picture_url', models.CharField(blank=True, max_length=255, verbose_name='picture url')),
                ('neighbourhood', models.CharField(blank=True, max_length=63, verbose_name='neighbourhood')),
                ('provider_listings_count', models.PositiveSmallIntegerField(null=True, verbose_name='provider listings count')),
                ('identity_verified', models.BooleanField(default=False, verbose_name='identity verified')),
                ('visitor_rating', models.DecimalField(decimal_places=2, max_digits=3, null=True, verbose_name='visitor rating')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
